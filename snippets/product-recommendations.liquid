<div
  class="productRecommend"
  data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4&intent=related"
>
  {%- if recommendations.performed? and recommendations.products_count > 0 -%}
    {% if recommendations.intent == 'related' %}
      <h2>You may also like</h2>
    {% elsif recommendations.intent == 'complementary' %}
      <h2>Pair it with</h2>
    {% endif %}

    <div class="productsGrid">
      {%- for product in recommendations.products -%}
        <div class="productCard">
          <a href="{{product.url}}">
            <img
              width="300"
              height="300"
              loading="lazy"
              src="{{ product.featured_image | image_url }}"
            >
            <span class="title">{{ product.title }}</span>
            <p class="productCard_price">
              <span>{{ product.price | money }}</span>
              <span>{{shop.currency}}</span>
            </p>
          </a>
        </div>
      {%- endfor -%}
    </div>
  {%- endif -%}
</div>

<script>
  const handleIntersection = (entries, observer) => {
    if (!entries[0].isIntersecting) return;

    observer.unobserve(productRecommendationsSection);

    const url = productRecommendationsSection.dataset.url;

    fetch(url)
      .then(response => response.text())
      .then(text => {
        const html = document.createElement('div');
        html.innerHTML = text;
        const recommendations = html.querySelector('.productRecommend');

        if (recommendations && recommendations.innerHTML.trim().length) {
          productRecommendationsSection.innerHTML = recommendations.innerHTML;
        }
      })
      .catch(e => {
        console.error(e);
      });
  };

  const productRecommendationsSection = document.querySelector('.productRecommend');
  const observer = new IntersectionObserver(handleIntersection, {rootMargin: '0px 0px 200px 0px'});

  observer.observe(productRecommendationsSection);
</script>